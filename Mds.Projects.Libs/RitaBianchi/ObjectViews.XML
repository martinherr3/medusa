<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ObjectViews</name>
    </assembly>
    <members>
        <member name="T:ObjectViews.ObjectViewComparer">
            <summary>
            The ObjectViewComparer class is used for sorting and finding.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewComparer.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            The ObjectViewComparer class is used for sorting and finding.
            </summary>
            <param name="propertyToCompare"></param>
            <param name="sortDirection"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare the value of two different objects. This is dependant on the propertyToCompare
            and the sortDirection member variables.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectViews.ColumnPropertyDescriptor">
            <summary>
            The ColumnPropertyDescriptor makes UI components think that a value at a specific index
            from the ObjectViewRow is a property.
            </summary>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.#ctor(ObjectViews.ObjectViewColumn)">
            <summary>
            Default constructor.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            No :)
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Get the value of the underlying property via the row and the column.
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Set the value of the underlying property via the row and the column.
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ColumnPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
        </member>
        <member name="P:ObjectViews.ColumnPropertyDescriptor.ComponentType">
            <summary>
            The type of the component.
            </summary>
        </member>
        <member name="P:ObjectViews.ColumnPropertyDescriptor.PropertyType">
            <summary>
            The type of the property.
            </summary>
        </member>
        <member name="P:ObjectViews.ColumnPropertyDescriptor.IsReadOnly">
            <summary>
            Indicates if the property is read-only.
            </summary>
        </member>
        <member name="P:ObjectViews.ColumnPropertyDescriptor.DisplayName">
            <summary>
            The Alias for the column.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewRowCollection">
            <summary>
            The ObjectViewRowCollection is a strong-typed collection of ObjectViewRows.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.Add(ObjectViews.ObjectViewRow)">
            <summary>
            Add a new row to the collection.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.IndexOf(ObjectViews.ObjectViewRow)">
            <summary>
            Retrieve the index of a given ObjectViewRow in the collection.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copy the elements in the list to the specified array, starting at the given position.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sort the inner list of objects based on the given comparer.
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewRowCollection.BinarySearch(System.Object,System.Collections.IComparer)">
            <summary>
            Perform a binary search for the given object and comparer.
            </summary>
            <param name="searchValue"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="P:ObjectViews.ObjectViewRowCollection.Item(System.Int32)">
            <summary>
            Indexer property.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewColumn">
            <summary>
            The ObjectViewColumn class represents a column of the ObjectView.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="propertyName">The name of the bound property.</param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="propertyName">The name of the bound property.</param>
            <param name="alias">The display name of the column.</param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="propertyName">The name of the bound property.</param>
            <param name="alias">The display name of the column.</param>
            <param name="isReadOnly">Is the column read-only?</param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.GetValue(System.Object)">
            <summary>
            Gets the actual value of the property of the dataObject that corresponds with this column.
            </summary>
            <param name="innerObject"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.SetValue(System.Object,System.Object)">
            <summary>
            Sets the actual value of the property of the dataObject that corresponds with this column.
            </summary>
            <param name="innerObject"></param>
            <param name="objectValue"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.GetPropertyDescriptor">
            <summary>
            Get a ColumnPropertyDescriptor for this column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.SetObjectView(ObjectViews.ObjectView)">
            <summary>
            Set the ObjectView where this column belongs to.
            </summary>
            <param name="ov"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumn.VerifyColumn">
            <summary>
            VerifyProperty checks if the column matches a property of the underlying type of the objectview.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.PropertyName">
            <summary>
            The name of the bound property. This can also be a 'deep' property
            (for example "Order.Customer").
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.Alias">
            <summary>
            The display name of the column.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.IsReadOnly">
            <summary>
            Indicates if the column is read-only.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.Type">
            <summary>
            The CLR type of the column.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.ObjectView">
            <summary>
            The ObjectView where this column belongs to.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumn.IsKey">
            <summary>
            The ObjectView where this column belongs to.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewColumn.InvalidColumn">
            <summary>
            Placeholder type for a column that fails to resolve.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewColumn.ObjectViewColumnTypeConverter">
            <summary>
            Creates the InstanceDescriptor for the designer.
            </summary>
        </member>
        <member name="T:ObjectViews.ChildObjectView">
            <summary>
            An ObjectView that gets all of its column information from another (template) ObjectView.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectView">
            <summary>
            The ObjectView class improves Winforms databinding with custom objects.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectView.#ctor(System.Type)">
            <summary>
            Constructor that accepts a given type of the underlying object.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.CreateChildObjectView(System.String,System.Type)">
            <summary>
            Create a child ObjectView that maps to one of the collection properties.
            </summary>
            <param name="collectionProperty"></param>
            <param name="childType"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.GetChildObjectView(System.String)">
            <summary>
            Get a child ObjectView.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.Find(System.String,System.Object)">
            <summary>
            Find the first occurance of a row where the given property alias has a certain value.
            </summary>
            <param name="propertyAlias">The alias for the property used for sorting. This is the property name
            when there is no alias defined.</param>
            <param name="value">The value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.CreateDataTable(System.String)">
            <summary>
            Creates a DataTable from the current contents of this ObjectView.
            </summary>
            <param name="tableName">The name of the table to create.</param>
            <returns>A System.Data.DataTable</returns>
        </member>
        <member name="M:ObjectViews.ObjectView.GetPropertyDescriptors">
            <summary>
            Get all PropertyDescriptors based on the columns of this ObjectView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.OnRowChanged(ObjectViews.ObjectViewRow)">
            <summary>
            Indicate that a given row has changed. The ObjectView will translate it into a correct
            ListChanged event.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.RemoveAt(System.Int32)">
            <summary>
            Remove an ObjectViewRow from a specific index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.Insert(System.Int32,System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.Remove(System.Object)">
            <summary>
            Remove a specific ObjectViewRow from the ObjectView.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.Contains(System.Object)">
            <summary>
            Check if a given ObjectViewRow exists.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.Clear">
            <summary>
            Clear the ObjectView and the underlying datasource.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectView.IndexOf(System.Object)">
            <summary>
            Get the index of a given ObjectViewRow.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.Refresh">
            <summary>
            Causes the ObjectView to re-read the underlying list. As if the DataSource was set for the first time.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectView.Add(System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.AddItem(System.Object)">
            <summary>
            Adds an item to the underlying list.
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.CopyTo(System.Array,System.Int32)">
            <summary>
            Copy the rows of the ObjectView to the specified array starting at the given index.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the rows of the ObjectView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.AddNew">
            <summary>
            Add a new ObjectViewRow to the ObjectView. The underlying object is automatically
            generated or added via the RowAdding event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sort the ObjectView.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.ApplySort(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Sort the ObjectView.
            </summary>
            <param name="propertyAlias">The alias for the property used for sorting. This is the property name
            when there is no alias defined.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:ObjectViews.ObjectView.RemoveSort">
            <summary>
            Remove the ObjectView sorting.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectView.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Find the first occurance of a row where the given property has a certain value.
            </summary>
            <param name="property"></param>
            <param name="key">The value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Not supported.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Not supported.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:ObjectViews.ObjectView.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Return the property descriptors for this ObjectView.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Return the name of the ObjectView.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.Clone">
            <summary>
            Create a cloned instance of the ObjectView. This is needed for child ObjectViews. 
            Each row that has a child ObjectView needs its own instance based on the child
            ObjectView that was added by the user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectView.BeginInit">
            <summary>
            Begin Initialization. Certain actions may be defered until .EndInit() is called.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectView.EndInit">
            <summary>
            End Initialization.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.Type">
            <summary>
            The CLR type of the underlying objects.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.KeyType">
            <summary>
            The CLR type of the underlying Key objects.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.AutoGenerateColumns">
            <summary>
            Indicates if the ObjectView should generate columns based on the current <see cref="P:ObjectViews.ObjectView.Type"></see>.
            </summary>
            <remarks>
            Any child ObjectView will inherit this setting!
            </remarks>
        </member>
        <member name="P:ObjectViews.ObjectView.Columns">
            <summary>
            The columns of the ObjectView.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.DataSource">
            <summary>
            The underlying objects for the ObjectView. Each object is transformed into an ObjectViewRow.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.Rows">
            <summary>
            The rows of the ObjectView.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.AllowNew">
            <summary>
            Indicates if adding new items is allowed.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.AllowEdit">
            <summary>
            Indicates if an existing item can be changed.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.AllowRemove">
            <summary>
            Indicates if removing items is allowed.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SupportsSorting">
            <summary>
            Indicates if sorting is allowed.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SupportsSearching">
            <summary>
            Indicates if searching is allowed.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.ChildViews">
            <summary>
            The nested objectviews for child collections. The name of the property that contains the 
            child collection is the key.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.Key">
            <summary>
            The name of the ObjectView.
            </summary>
        </member>
        <member name="E:ObjectViews.ObjectView.RowAdding">
            <summary>
            This event is fired before adding a new row to the ObjectView. 
            Use this to supply your own object instance, for instance,
            when using a factory for creating instances.
            </summary>
        </member>
        <member name="E:ObjectViews.ObjectView.RowRemoved">
            <summary>
            This event is fired after a row is removed from the ObjectView. 
            Use this to do things with an object after it is removed from the
            ObjectView, for instance, delete it in the database.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.IsReadOnly">
            <summary>
            Indicates if the ObjectView is read-only.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.Item(System.Int32)">
            <summary>
            Indexer property. Get the ObjectViewRow at the given index.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.IsFixedSize">
            <summary>
            Has the ObjectView a fixed size?
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.IsSynchronized">
            <summary>
            The ObjectView is not thread-safe.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.Count">
            <summary>
            The number of rows in the ObjectView.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SyncRoot">
            <summary>
            The ObjectView is not thread-safe.
            </summary>
        </member>
        <member name="E:ObjectViews.ObjectView.ListChanged">
            <summary>
            Event is is raised when the list changes or an item in the list changes.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SupportsChangeNotification">
            <summary>
            Notification is supported.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SortProperty">
            <summary>
            Gets the property descriptor of the sorted column.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.IsSorted">
            <summary>
            Indicates if the ObjectView is sorted.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.SortDirection">
            <summary>
            The sort direction of the ObjectView.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.System#ComponentModel#IBindingList#AllowNew">
            <summary>
            Implementation of IBindingList.AddNew.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.System#ComponentModel#IBindingList#AllowEdit">
            <summary>
            Implementation of IBindingList.AllowEdit. 
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.System#ComponentModel#IBindingList#AllowRemove">
            <summary>
            Implementation of IBindingList.AllowRemove. 
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.System#ComponentModel#IBindingList#SupportsSorting">
            <summary>
            Implementation of IBindingList.AllowRemove. 
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.System#ComponentModel#IBindingList#SupportsSearching">
            <summary>
            Implementation of IBindingList.SupportsSearching.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectView.IsInitializing">
            <summary>
            Allows other classes (like ObjectViewColumn) to know if this class is still initializing.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewRow">
            <summary>
            The ObjectViewRow class represents a row in the ObjectView.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.#ctor(ObjectViews.ObjectView,System.Object,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="objectView"></param>
            <param name="innerObject"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.#ctor(ObjectViews.ObjectView,System.Object,System.Object,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="objectView"></param>
            <param name="innerObject"></param>
            <param name="isNew"></param>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.BeginEdit">
            <summary>
            Begin editing of the row.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.CancelEdit">
            <summary>
            Cancel editing of the row. This will restore the original values or remove
            a newly created row.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.EndEdit">
            <summary>
            Edn editing of the row.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetConverter">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetEvents(System.Attribute[])">
            <summary>
            Nothing.
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetComponentName">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Nothing.
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetAttributes">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetProperties(System.Attribute[])">
            <summary>
            Get the custom property descriptors ('fake properties') for this row.
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Get the custom property descriptors ('fake properties') for this row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetEditor(System.Type)">
            <summary>
            Nothing.
            </summary>
            <param name="editorBaseType"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetDefaultProperty">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetDefaultEvent">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ObjectViewRow.GetClassName">
            <summary>
            Nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ObjectViews.ObjectViewRow.Item(System.Int32)">
            <summary>
            Indexer property.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewRow.Item(System.String)">
            <summary>
            Indexer property. Returns the value of the mapped property of the underlying object.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewRow.InnerObject">
            <summary>
            The underlying object.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewRow.InnerKey">
            <summary>
            The underlying object.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewRow.IsNew">
            <summary>
            Indicates if the row is a new one.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewRow.Uninitialized">
            <summary>
            Represents an unititialized / unchanged valued for IEditableObject support.
            </summary>
        </member>
        <member name="T:ObjectViews.InstanceEventArgs">
            <summary>
            EventArgs class that can be used to let external processes manage objects.
            </summary>
        </member>
        <member name="M:ObjectViews.InstanceEventArgs.#ctor(System.Type,System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="Type"></param>
            <param name="KeyType"></param>
        </member>
        <member name="P:ObjectViews.InstanceEventArgs.Instance">
            <summary>
            The instance of the object.
            </summary>
        </member>
        <member name="P:ObjectViews.InstanceEventArgs.Key">
            <summary>
            The key of the Dictionary.
            </summary>
        </member>
        <member name="P:ObjectViews.InstanceEventArgs.Type">
            <summary>
            The type of the object
            </summary>
        </member>
        <member name="P:ObjectViews.InstanceEventArgs.KeyType">
            <summary>
            The type of the key
            </summary>
        </member>
        <member name="T:ObjectViews.NewInstanceEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectViews.RemovedInstanceEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewColumnCollection">
            <summary>
            The ObjectViewColumnCollection is a strong-typed collection of ObjectViewColumns.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.#ctor(ObjectViews.ObjectView)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.CreateFromString(System.String)">
            <summary>
            Creates columns from a select-list list string. For backward compatibility.
            </summary>
            <param name="selectList">A select-list style string.</param>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.Add(System.String)">
            <summary>
            Add a new column to the collection.
            </summary>
            <param name="propertyName">The property where this column maps to.</param>
            <returns>The newly created ObjectViewColumn.</returns>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.Add(System.String,System.String)">
            <summary>
            Add a new column to the collection.
            </summary>
            <param name="propertyName">The property where this column maps to.</param>
            <param name="alias">The alias for the column (display name).</param>
            <returns>The newly created ObjectViewColumn.</returns>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            Add a new column to the collection.
            </summary>
            <param name="propertyName">The property where this column maps to.</param>
            <param name="alias">The alias for the column (display name).</param>
            <param name="isReadOnly">Is the column read-only?</param>
            <returns>The newly created ObjectViewColumn.</returns>
        </member>
        <member name="M:ObjectViews.ObjectViewColumnCollection.Add(ObjectViews.ObjectViewColumn)">
            <summary>
            Add an ObjectViewColumn to the collection.
            </summary>
            <param name="column"></param>
        </member>
        <member name="E:ObjectViews.ObjectViewColumnCollection.ColumnChanged">
            <summary>
            Notify when a column changes.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumnCollection.Item(System.String)">
            <summary>
            Indexer property that retrieves a single column by property name.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewColumnCollection.Item(System.Int32)">
            <summary>
            Indexer property.
            </summary>
        </member>
        <member name="T:ObjectViews.ObjectViewCollection">
            <summary>
            The ObjectViewColumnCollection is a strong-typed collection of ObjectViewColumns.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ObjectViews.ObjectViewCollection.Add(ObjectViews.ObjectView)">
            <summary>
            Add an ObjectViewColumn to the collection.
            </summary>
            <param name="objectView"></param>
        </member>
        <member name="E:ObjectViews.ObjectViewCollection.ColumnChanged">
            <summary>
            Notify when a column changes.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewCollection.Item(System.String)">
            <summary>
            Indexer property that retrieves a single column by property name.
            </summary>
        </member>
        <member name="P:ObjectViews.ObjectViewCollection.Item(System.Int32)">
            <summary>
            Indexer property.
            </summary>
        </member>
        <member name="T:ObjectViews.Design.ObjectViewConfigurationDialog">
            <summary>
            Summary description for ObjectViewConfigurationDialog.
            </summary>
        </member>
        <member name="M:ObjectViews.Design.ObjectViewConfigurationDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ObjectViews.Design.ObjectViewConfigurationDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ObjectViews.ChildViewPropertyDescriptor">
            <summary>
            The ChildViewPropertyDescriptor transforms child collections (IList) into fully blown 
            ObjectViews.
            </summary>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.#ctor(System.String,ObjectViews.ObjectView)">
            <summary>
            Default constructor.
            </summary>
            <param name="propertyName"></param>
            <param name="parentObjectView"></param>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Get an ObjectView for this propertydescriptor.
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Can't reset value.
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Reset value does nothing.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:ObjectViews.ChildViewPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            No serialization.
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:ObjectViews.ChildViewPropertyDescriptor.ComponentType">
            <summary>
            The type of the component.
            </summary>
        </member>
        <member name="P:ObjectViews.ChildViewPropertyDescriptor.PropertyType">
            <summary>
            The type of the property.
            </summary>
        </member>
        <member name="P:ObjectViews.ChildViewPropertyDescriptor.IsReadOnly">
            <summary>
            PropertyDescriptor for child collections is always read-only.
            </summary>
        </member>
    </members>
</doc>
